#0 building with "desktop-linux" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.11kB done
#1 DONE 0.0s

#2 [auth] library/nginx:pull token for registry-1.docker.io
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 DONE 0.8s

#4 [internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [ 1/12] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
#5 DONE 0.0s

#6 [internal] load build context
#6 transferring context: 500B done
#6 DONE 0.0s

#7 [ 4/12] RUN pip3 install --no-cache-dir --break-system-packages -r /app/requirements.txt
#7 CACHED

#8 [ 5/12] COPY backend/. /app
#8 CACHED

#9 [ 3/12] COPY backend/requirements.txt /app/requirements.txt
#9 CACHED

#10 [ 6/12] COPY frontend/. /usr/share/nginx/html
#10 CACHED

#11 [ 9/12] RUN cat > /start.sh << 'EOF'
#11 CACHED

#12 [ 7/12] COPY supervisord.conf /etc/supervisor/supervisord.conf
#12 CACHED

#13 [ 8/12] COPY nginx.conf /etc/nginx/nginx.conf
#13 CACHED

#14 [10/12] RUN chmod +x /start.sh
#14 CACHED

#15 [ 2/12] RUN apk add --no-cache python3 py3-pip supervisor curl bash
#15 CACHED

#16 [11/12] RUN mkdir -p /var/log/supervisor
#16 CACHED

#17 exporting to image
#17 exporting layers done
#17 writing image sha256:edaa5bb3c5ac65a456b43c743ee0078cf42da58db46a76256e93c93bc51fa9ff done
#17 naming to docker.io/library/local_docker_tesing done
#17 DONE 0.0s

View build details: docker-desktop://dashboard/build/desktop-linux/desktop-linux/zj6c8vlo0epvs4qhocowjw8co
